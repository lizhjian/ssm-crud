<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wuxin.mapper.OrderPriMapper">
  <!--二级缓存-->
  <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/>

  <resultMap id="BaseResultMap" type="com.wuxin.entity.OrderPri">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <collection property="dtlList" resultMap="dtlListResultMap" />
  </resultMap>
  <resultMap id="dtlListResultMap" type="com.wuxin.entity.OrderDtl">
    <id column="dtlId" property="id"/>
    <result column="dtlOrderNum" property="orderNum"/>
    <result column="dtlproId" property="proId"/>
    <result column="dtlIsDel" property="isDel"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, order_num, is_del
  </sql>

  <select id="selectByPrimaryKey" parameterType="com.wuxin.entity.OrderPri" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_pri
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="com.wuxin.entity.OrderPri">
    delete from order_pri
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.wuxin.entity.OrderPri">
    insert into order_pri (id, order_num, is_del
      )
    values (#{id,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{isDel,jdbcType=INTEGER}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.wuxin.entity.OrderPri">
    insert into order_pri
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wuxin.entity.OrderPri">
    update order_pri
    <set>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wuxin.entity.OrderPri">
    update order_pri
    set order_num = #{orderNum,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByParams" resultMap="BaseResultMap" >
    select * from order_pri
  </select>
  <select id="selectByParamsAll" resultMap="BaseResultMap">
    select
        p.id,
        p.order_num,
        p.is_del,
        d.order_num  dtlOrderNum,
        d.pro_id dtlproId,
        d.is_del dtlIsDel
     from order_pri  p left join
    order_dtl d on p.order_num = d.order_num
  </select>
  <select id="selectByField" resultMap="BaseResultMap">
    select * from
    order_pri
    <where>
      <if test="id !=null">
        and id = #{id, jdbcType =INTEGER}
      </if>
      <if test="orderNum !=null and orderNum !=''">
        and order_num = #{orderNum, jdbcType = VARCHAR}
      </if>
    </where>
  </select>
  <!--trim 代替where-->
  <select id="selectByFieldV2" resultMap="BaseResultMap">
    select * from
    order_pri
    <trim prefix="where" prefixOverrides="and">
      <if test="id !=null">
        and id = #{id, jdbcType =INTEGER}
      </if>
      <if test="orderNum !=null and orderNum !=''">
        and order_num like concat('%', #{orderNum, jdbcType = VARCHAR}, '%')
      </if>
    </trim>
  </select>
  <!--trim 代替where-->
  <select id="selectByFieldV3" resultMap="BaseResultMap">
    select * from
    order_pri
    <trim prefix="where" prefixOverrides="and">
      <if test="id !=null">
        and id = #{id, jdbcType =INTEGER}
      </if>
      <if test="orderNum !=null and orderNum !=''">
        and order_num = #{orderNum, jdbcType = VARCHAR}
      </if>
    </trim>
  </select>

  <!--使用trim代替-->
  <update id="updateFieldV2" >
  update order_pri
    <trim prefix="set" suffixOverrides=",">
        <if test="orderNum !=null">
          order_num = #{orderNum, jdbcType = VARCHAR},
        </if>
        <if test="isDel !=null">
          is_del = #{isDel, jdbcType = INTEGER},
        </if>
    </trim>
  where
  id = #{id, jdbcType = VARCHAR }
  </update>

  <update id="updateField">
  update order_pri
    <set>
    <if test="orderNum !=null">
      order_num = #{orderNum, jdbcType = VARCHAR},
    </if>
    <if test="isDel !=null">
      is_del = #{isDel, jdbcType = INTEGER},
    </if>
    </set>
    where
  id = #{id, jdbcType = VARCHAR }
</update>

  <select id="selectById" resultMap="BaseResultMap">
    select * from order_pri
    where order_num = #{orderNum, jdbcType = VARCHAR}
  </select>

  <!--数组-->
  <select id="selectBatch" resultMap="BaseResultMap">
    select * from
    order_pri
    where id in
    <foreach collection="array" index="item" open="(" close=")" separator=",">
       #{item}
    </foreach>
  </select>
  <!--动态集合-->
  <select id="selectBatchList" resultMap="BaseResultMap">
    select * from
    order_pri
    where id in
    <foreach collection="list" item="index" separator="," open="(" close=")">
      #{index}
    </foreach>
  </select>
  <!--多个动态集合-->
  <select id="selectBatchListV2" resultMap="BaseResultMap">
    select * from
    order_pri
    where id in
    <foreach collection="idList" item="index" separator="," open="(" close=")">
      #{index}
    </foreach>
    and
    order_num in
    <foreach collection="orders" item="it" separator="," open="(" close=")">
      #{it}
    </foreach>
  </select>

  <select id = "selectByCase" resultMap="BaseResultMap">
  select * from order_pri
    <where>
      <choose >
        <when test="id !=null ">
          id =#{id, jdbcType = INTEGER}
        </when>
        <when test="orderNum !=null ">
          and order_num =#{orderNum, jdbcType = VARCHAR}
        </when>
        <otherwise >
          and is_del =#{isDel, jdbcType = INTEGER}
        </otherwise>
      </choose>
    </where>
  </select>
  <select id="selectListParam" parameterType="com.wuxin.entity.OrderPri" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from  order_pri
    <where>
      <if test="orderPri.id !=null">
        and id = #{orderPri.id, jdbcType = INTEGER }
      </if>
      <if test="orderPri.orderNum !=null ">
        and order_num  = #{orderPri.orderNum, jdbcType = VARCHAR}
      </if>
      <if test="orderPri.isDel !=null">
        and is_del = #{orderPri.isDel, jdbcType = INTEGER}
      </if>
    </where>
  </select>
  <select id="selectListByMap" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from  order_pri
    <where>
      <if test="id !=null">
        and id = #{id, jdbcType = INTEGER }
      </if>
      <if test="orderNum !=null ">
        and order_num  = #{orderNum, jdbcType = VARCHAR}
      </if>
      <if test="isDel !=null">
        and is_del = #{isDel, jdbcType = INTEGER}
      </if>
    </where>
  </select>

  <select id="selectListByMulEntity" resultMap="BaseResultMap">
    select
    p.id
    from  order_pri p left join
    order_dtl d on p.order_num = d.order_num
    <where>
      <if test="pri.id !=null">
        and p.id = #{id, jdbcType = INTEGER }
      </if>
      <if test="pri.orderNum !=null ">
        and p.order_num  = #{orderNum, jdbcType = VARCHAR}
      </if>
      <if test="pri.isDel !=null">
        and p.is_del = #{isDel, jdbcType = INTEGER}
      </if>
      <if test="dtl.proId !=null">
        and d.pro_id = #{proId, jdbcType = INTEGER}
      </if>
    </where>
  </select>
</mapper>