<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--Spring 配置文件  和业务有关-->
  <!-- <context:property-placeholder location="classpath:dbconfig.properties"/>-->

    <!--对service的扫描放到applicationContext.xml里面-->
    <context:component-scan base-package="com.wuxin">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Component"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

   <!-- 配置和mybatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定mysql全局配置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!--mybatis mapper文件的位置-->
        <property name="mapperLocations" value="classpath*:mapper/*.xml"></property>
    </bean>
     <!--配置扫描器，将mybatis接口的时间加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!--扫描所有的dao接口的实现，加入到ioc中-->
        <property name="basePackage" value="com.wuxin.mapper"></property>
    </bean>

    <!--事物控制的配置-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制数据源-->
         <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

        <!--开启事务基于注解的事物，使用xml配置形式的事物（必要）-->
    <!--<aop:config>-->
        <!--&lt;!&ndash;切入点&ndash;&gt;-->
        <!--<aop:pointcut expression="execution(* com.wuxin.service..* (..))" id="txPoint"/>-->
        <!--&lt;!&ndash;配置事务增强&ndash;&gt;-->
        <!--<aop:advisor  advice-ref="txAdvice" pointcut-ref="txPoint"/>-->
    <!--</aop:config>-->

    <!--&lt;!&ndash;配置事物增强，事物如何切入&ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->

        <!--<tx:attributes>-->
            <!--&lt;!&ndash;所有方法都是事物方法&ndash;&gt;-->
            <!--&lt;!&ndash;<tx:method name="*" rollback-for="java.lang.Exception"/>&ndash;&gt;-->
            <!--<tx:method name="*" rollback-for="java.lang.Exception"/>-->
            <!--&lt;!&ndash;以get开头的所有方法&ndash;&gt;-->
            <!--<tx:method name="get*" read-only="true"/>-->
        <!--</tx:attributes>-->

    <!--</tx:advice>-->

    <!--spring 配置文件的核心点（数据源 与mybatis的整合）-->
<!--    Spring配置文件核心点 与mybatis整合-->
   <import resource="spring-aop.xml"/>

</beans>