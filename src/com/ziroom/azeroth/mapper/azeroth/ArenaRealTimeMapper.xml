<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ziroom.azeroth.mapper.azeroth.ArenaRealTimeMapper" >
  <resultMap id="BaseResultMap" type="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTime" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="center_code" property="centerCode" jdbcType="VARCHAR" />
    <result column="dept_code" property="deptCode" jdbcType="VARCHAR" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_code, user_name, business_type, city_code, center_code, dept_code, dept_name, 
    group_name, is_del, create_time, last_modify_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTimeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_arena_realtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_arena_realtime
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_arena_realtime
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTimeExample" >
    delete from t_arena_realtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTime" >
    insert into t_arena_realtime (id, user_code, user_name, 
      business_type, city_code, center_code, 
      dept_code, dept_name, group_name, 
      is_del, create_time, last_modify_time
      )
    values (#{id,jdbcType=BIGINT}, #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{businessType,jdbcType=INTEGER}, #{cityCode,jdbcType=VARCHAR}, #{centerCode,jdbcType=VARCHAR}, 
      #{deptCode,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{groupName,jdbcType=VARCHAR}, 
      #{isDel,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{lastModifyTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTime" >
    insert into t_arena_realtime
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="centerCode != null" >
        center_code,
      </if>
      <if test="deptCode != null" >
        dept_code,
      </if>
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="centerCode != null" >
        #{centerCode,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTimeExample" resultType="java.lang.Integer" >
    select count(*) from t_arena_realtime
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_arena_realtime
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userCode != null" >
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.businessType != null" >
        business_type = #{record.businessType,jdbcType=INTEGER},
      </if>
      <if test="record.cityCode != null" >
        city_code = #{record.cityCode,jdbcType=VARCHAR},
      </if>
      <if test="record.centerCode != null" >
        center_code = #{record.centerCode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptCode != null" >
        dept_code = #{record.deptCode,jdbcType=VARCHAR},
      </if>
      <if test="record.deptName != null" >
        dept_name = #{record.deptName,jdbcType=VARCHAR},
      </if>
      <if test="record.groupName != null" >
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastModifyTime != null" >
        last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_arena_realtime
    set id = #{record.id,jdbcType=BIGINT},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      business_type = #{record.businessType,jdbcType=INTEGER},
      city_code = #{record.cityCode,jdbcType=VARCHAR},
      center_code = #{record.centerCode,jdbcType=VARCHAR},
      dept_code = #{record.deptCode,jdbcType=VARCHAR},
      dept_name = #{record.deptName,jdbcType=VARCHAR},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{record.lastModifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTime" >
    update t_arena_realtime
    <set >
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="centerCode != null" >
        center_code = #{centerCode,jdbcType=VARCHAR},
      </if>
      <if test="deptCode != null" >
        dept_code = #{deptCode,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastModifyTime != null" >
        last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ziroom.azeroth.entity.AchievementUser.ArenaRealTime" >
    update t_arena_realtime
    set user_code = #{userCode,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      business_type = #{businessType,jdbcType=INTEGER},
      city_code = #{cityCode,jdbcType=VARCHAR},
      center_code = #{centerCode,jdbcType=VARCHAR},
      dept_code = #{deptCode,jdbcType=VARCHAR},
      dept_name = #{deptName,jdbcType=VARCHAR},
      group_name = #{groupName,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>